package {{.PackageName}}

import (
    "base/app/models"
    "base/core/module"
    "base/core/logger"
    "base/core/router"
    "base/core/storage"
    "base/core/emitter"

    "gorm.io/gorm"
)

type Module struct {
    module.DefaultModule
    DB         *gorm.DB
    Service    *{{.Service}}
    Controller *{{.Controller}}
}

// Init creates and initializes the {{.Model}} module with all dependencies
func Init(deps module.Dependencies) module.Module {
    // Initialize service and controller
    service := New{{.Service}}(deps.DB, deps.Emitter, deps.Storage, deps.Logger)
    controller := New{{.Controller}}(service, deps.Storage)
    
    // Create module
    mod := &Module{
        DB:         deps.DB,
        Service:    service,
        Controller: controller,
    }
    
    return mod
}

// Routes registers the module routes
func (m *Module) Routes(router *router.RouterGroup) {
    m.Controller.Routes(router)
}

func (m *Module) Init() error {
    return nil
}

func (m *Module) Migrate() error {
    return m.DB.AutoMigrate(&models.{{.Model}}{})
}

func (m *Module) GetModels() []any {
    return []any{
        &models.{{.Model}}{},
    }
}
